{"version":3,"sources":["statics/refer.js","methods/assistFunctions.js","context/reducer/mindmap/index.js","context/reducer/nodeStatus/index.js","context/reducer/history/index.js","context/reducer/global/index.js","context/index.js","context/reducer/mindmap/actionTypes.js","customHooks/useMindmap.js","components/Popup/common/styledComponents.js","context/reducer/nodeStatus/actionCreator.js","context/reducer/mindmap/actionCreator.js","context/reducer/nodeStatus/actionTypes.js","context/reducer/history/actionTypes.js","context/reducer/global/actionTypes.js","statics/defaultMindmap.js","context/reducer/history/actionCreator.js","context/reducer/global/actionCreator.js","customHooks/useTheme.js","features/ThemeProvider/index.js","customHooks/useHistory.js","components/Popup/common/popupType.js","components/ToolButton/index.js","components/MindmapTitle/index.js","components/Popup/subComponents/New.js","methods/mindmapParser.js","components/Popup/subComponents/Open.js","components/Popup/subComponents/Theme/ThemeListItem.js","components/Popup/subComponents/Theme/index.js","components/Popup/index.js","features/Nav/index.js","methods/getKeydownEvent.js","components/Node/subComponents/Toolbar.js","components/Node/subComponents/InputDiv.js","components/Node/index.js","components/SubNode/index.js","components/RootNode/index.js","methods/drawCanvas.js","methods/getDragEvents.js","components/DragCanvas/index.js","components/LineCanvas/index.js","features/Mindmap/index.js","features/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["LEFT_NODE","RIGHT_NODE","DROP_AREA","ROOT_PARENT","id","children","ROOT_NODE_ID","MINDMAP_ID","NEW_NODE_TEXT","DEFAULT_TITLE","THEME_MAIN","THEME_LIGHT","THEME_DARK","THEME_EX","THEME_ASSIST","handlePropagation","event","stopPropagation","deepCopy","input","Object","Array","isArray","map","output","entries","forEach","key","value","findNode","node","search_id","child","find","item","setShowChildrenTrue","showChildren","downloadFile","url","filename","link","document","createElement","href","download","click","defaultValue_mindmap","JSON","parse","localStorage","getItem","defaultMindmap","mindmap","action","type","actionTypes","new_mindmap","node_found","data","node_id","length","assign","push","parent_id","insert_index","findIndex","splice","parent","node_index","node_copy","is_sibling","target_index","target_id","delete_index","defaultValue_nodeStatus","cur_select","select_by_click","cur_edit","cur_node_info","nodeStatus","defaultValue_history","undo","redo","last_snapshot","history","new_history","unshift","pop","shift","defaultValue_global","title","refer","theme_index","Number","theme_list","main","light","dark","ex","assist","global","context","React","createContext","WrappedProvider","props","useReducer","mindmapReducer","mState","mDispatch","nodeStatusReducer","nState","nDispatch","historyReducer","hState","hDispatch","globalReducer","combined","state","dispatch","Provider","TOGGLE_CHILDREN","ADD_CHILD","ADD_SIBLING","MOVE_NODE","CHANGE_TEXT","DELETE_NODE","EXPAND_ALL","SET_MINDMAP","useMindmap","useContext","toggleChildren","bool","mindmapAction","addChild","new_node_id","md5","Date","now","Math","random","nodeStatusAction","addSibling","moveNode","editNode","changeText","text","selectNode","deleteNode","clearNodeStatus","setMindmap","is_new_map","clearHistory","expandAll","ButtonSet","className","css","MainButton","Highlight","Annotation","Shortcut","setSelect","setEdit","clearAll","getNodeInfo","on_left","SET_SELECT","SET_EDIT","GET_NODE_INFO","CLEAR_ALL","SET_HISTORY","CLEAR_HISTORY","SET_TITLE","SET_THEME","setHistory","cur_node","setTitle","theme","useMemo","setTheme","index","globalAction","ThemeProvider","useTheme","applySnapshot","snapshot","undoHistory","redoHistory","NONE","OPEN","EXPORT","THEME","ToolButton","icon","onClick","disabled","cx","wrapper","disabled_style","MindmapTitle","self","useRef","useEffect","setItem","ref","contentEditable","suppressContentEditableWarning","spellCheck","onKeyDown","toUpperCase","current","textContent","blur","onBlur","new_title","trim","slice","New","handleClosePopup","handleDownload","getLayerAndText","line","format","layer","match","replace","buildNodeFromText","data_array","cur_layer","cur_text","root_data","copyNodeData","target_node","source_node","is_root_node","expandState","buildNodeFromJSON","json","km_mindmap","root","import_data","split","filter","Open","sub_title","list_wrapper","accept","addEventListener","file","target","files","file_name","name","dot_index","file_reader","FileReader","onload","str","result","mindmapParser","alert","readAsText","ThemeListItem","is_current","current_style","style","backgroundColor","Theme","Popup","Content","popupType","lazy","getContentComponent","content_wrapper","close_button","fallback","overlay","Nav","useState","popup","setPopup","useHistory","encodeURIComponent","stringify","section","mindmapHook","historyHook","navigator","platform","startsWith","metaKey","ctrlKey","shiftKey","preventDefault","trunc","cur_index","handleKeyEventWithNode","e","Toolbar","InputDiv","focus","getSelection","selectAllChildren","Node","node_refs","add","delete","scrollIntoView","behavior","block","inline","common_style","specific_style","seleted_style","draggable","data-tag","data-parent","data-show-children","drop_area","onDoubleClick","toggle_button","button_left","button_right","style_selected_border","SubNode","left_style","sub_node","RootNode","root_node","total","half","drawBezier","ctx","from_x","from_y","to_x","to_y","moveTo","bezierCurveTo","drawLine","get","parent_x_left","parent_x_right","parent_y","child_data","child_x_left","child_x_right","child_y","drawLineCanvas","beginPath","lineWidth","strokeStyle","stroke","closePath","drawDragCanvas","child_id","parent_offset","child_offset","child_left_of_parent","setLineDash","parent_x","child_x","top","bottom","left","right","strokeRect","virtual_rect_height","getDomOffset","dom","offsetLeft","offsetWidth","offsetTop","offsetHeight","drag_canvas","container","children_offset_left","children_offset_right","children_offset_vertical","parent_is_root","container_left","container_top","in_drop_area","handleContainerScroll","scrollLeft","scrollTop","listener","undefined","dataset","tag","getElementById","children_offset","each","min","offset","max","reduce","flat_arr","cur","concat","getContext","clearRect","width","height","mouse_x","x","mouse_y","y","i","last_index","j","parentNode","classList","remove","removeEventListener","DragCanvas","parent_ref","container_ref","flag","setFlag","handleWindowResize","window","handleDrag","getDragEvents","LineCanvas","Map","from","Set","Mindmap","mindmap_json","handleKeydown","getKeydownEvent","Main","App","Boolean","location","hostname","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.520607d0.chunk.js","sourcesContent":["// Node Type\nexport const LEFT_NODE = 'nodeLeft';\nexport const RIGHT_NODE = 'nodeRight';\nexport const DROP_AREA = 'dropArea';\n\n// DOM 操作相关\nexport const ROOT_PARENT = {id: '', children: []};\nexport const ROOT_NODE_ID = 'rmind_root_node';\nexport const MINDMAP_ID = 'rmind_mindmap_wrapper';\n\n// 缺省文本\nexport const NEW_NODE_TEXT = '新建节点';\nexport const DEFAULT_TITLE = '未命名导图';\n\n// CSS 主题变量名\nexport const THEME_MAIN = '--theme-main';\nexport const THEME_LIGHT = '--theme-light';\nexport const THEME_DARK = '--theme-dark';\nexport const THEME_EX = '--theme-ex';\nexport const THEME_ASSIST = '--theme-assist';","export const handlePropagation = event => {\n    event.stopPropagation();\n};\n\nexport const deepCopy = input => { // 简单的递归深拷贝，只考虑 context 中 state 的复制，因此没有处理 function 等\n    if (input instanceof Object) {\n        if (Array.isArray(input)) {\n            return input.map(deepCopy);\n        }\n        let output = {};\n        Object.entries(input).forEach(([key, value]) => {\n            output[key] = deepCopy(value);\n        });\n        return output;\n    }\n    return input;\n};\n\nexport const findNode = (node, search_id) => {\n    if (node.id === search_id) {\n        return node;\n    }\n    return node.children.map(child => findNode(child, search_id)).find(item => item);\n};\n\nexport const setShowChildrenTrue = node => {\n    node.showChildren = true;\n    node.children.forEach(setShowChildrenTrue);\n};\n\nexport const downloadFile = (url, filename) => {\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.click();\n};","import * as actionTypes from './actionTypes';\nimport defaultMindmap from '../../../statics/defaultMindmap';\nimport {findNode, deepCopy, setShowChildrenTrue} from '../../../methods/assistFunctions';\n\nexport const defaultValue_mindmap = JSON.parse(localStorage.getItem('mindmap')) || defaultMindmap;\n\nexport default (mindmap, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_CHILDREN: {\n            const new_mindmap = deepCopy(mindmap),\n                node_found = findNode(new_mindmap, action.data.node_id);\n            if (node_found.children.length > 0 && node_found !== new_mindmap) {\n                Object.assign(node_found, action.data.node);\n            }\n            return new_mindmap;\n        }\n        case actionTypes.ADD_CHILD: {\n            const new_mindmap = deepCopy(mindmap),\n                node_found = findNode(new_mindmap, action.data.node_id);\n            node_found.children.push(action.data.node);\n            return new_mindmap;\n        }\n        case actionTypes.ADD_SIBLING: {\n            const new_mindmap = deepCopy(mindmap);\n            if (action.data.parent_id) {\n                const node_found = findNode(new_mindmap, action.data.parent_id);\n                const insert_index = node_found.children.findIndex(node => node.id === action.data.node_id) + 1;\n                node_found.children.splice(insert_index, 0, action.data.node);\n            }\n            return new_mindmap;\n        }\n        case actionTypes.MOVE_NODE: {\n            const new_mindmap = deepCopy(mindmap),\n                parent = findNode(new_mindmap, action.data.parent_id),\n                node_index = parent.children.findIndex(node => node.id === action.data.node_id),\n                node_copy = parent.children[node_index];\n            parent.children.splice(node_index, 1);\n            if (action.data.is_sibling) {\n                const target_index = parent.children.findIndex(node => node.id === action.data.target_id) + 1 || parent.children.length + 1;\n                parent.children.splice(target_index - 1, 0, node_copy);\n            } else {\n                const target_node = findNode(new_mindmap, action.data.target_id);\n                target_node.children.push(node_copy);\n            }\n            return new_mindmap;\n        }\n        case actionTypes.CHANGE_TEXT: {\n            const new_mindmap = deepCopy(mindmap),\n                node_found = findNode(new_mindmap, action.data.node_id);\n            Object.assign(node_found, action.data.node);\n            return new_mindmap;\n        }\n        case actionTypes.DELETE_NODE: {\n            const new_mindmap = deepCopy(mindmap);\n            if (action.data.parent_id) {\n                const node_found = findNode(new_mindmap, action.data.parent_id);\n                const delete_index = node_found.children.findIndex(node => node.id === action.data.node_id);\n                node_found.children.splice(delete_index, 1);\n            }\n            return new_mindmap;\n        }\n        case actionTypes.EXPAND_ALL: {\n            const new_mindmap = deepCopy(mindmap);\n            const node_found = findNode(new_mindmap, action.data.node_id);\n            setShowChildrenTrue(node_found);\n            return new_mindmap;\n        }\n        case actionTypes.SET_MINDMAP: {\n            return action.data.mindmap;\n        }\n        default:\n            return mindmap;\n    }\n};","import * as actionTypes from './actionTypes';\n\nexport const defaultValue_nodeStatus = {\n    cur_select: '',\n    select_by_click: false,\n    cur_edit: '',\n    cur_node_info: {}\n};\n\nexport default (nodeStatus, action) => {\n    switch (action.type) {\n        case actionTypes.SET_SELECT:\n            if (nodeStatus.cur_select === action.data.cur_select) { // 避免 cur_select 未变更时 info 被清空\n                delete action.data.cur_node_info;\n            }\n            return {...nodeStatus, ...action.data};\n        case actionTypes.SET_EDIT:\n        case actionTypes.CLEAR_ALL:\n        case actionTypes.GET_NODE_INFO:\n            return {...nodeStatus, ...action.data};\n        default:\n            return nodeStatus;\n    }\n};","import * as actionTypes from './actionTypes';\nimport {deepCopy} from '../../../methods/assistFunctions';\n\nexport const defaultValue_history = {\n    undo: [],\n    redo: [],\n    last_snapshot: null\n};\n\nexport default (history, action) => {\n    switch (action.type) {\n        case actionTypes.SET_HISTORY: {\n            const new_history = deepCopy(history);\n            if (new_history.last_snapshot) {\n                if (new_history.undo.length > 0 && new_history.undo[new_history.undo.length - 1].mindmap === action.data.mindmap) {\n                    new_history.redo.unshift(new_history.last_snapshot);\n                    new_history.undo.pop();\n                } else if (new_history.redo.length > 0 && new_history.redo[0].mindmap === action.data.mindmap) {\n                    new_history.undo.push(new_history.last_snapshot);\n                    new_history.redo.shift();\n                } else {\n                    new_history.undo.push(new_history.last_snapshot);\n                    new_history.redo = [];\n                }\n            }\n            new_history.last_snapshot = action.data;\n            return new_history;\n        }\n        case actionTypes.CLEAR_HISTORY: {\n            return defaultValue_history;\n        }\n        default:\n            return history;\n    }\n};","import * as actionTypes from './actionTypes';\nimport * as refer from '../../../statics/refer';\nimport {deepCopy} from '../../../methods/assistFunctions';\n\nexport const defaultValue_global = {\n    title: localStorage.getItem('title') || refer.DEFAULT_TITLE,\n    theme_index: Number(localStorage.getItem('theme_index')) || 0,\n    theme_list: [\n        {main: \"#eda938\", light: \"#f4cc87\", dark: \"#e79021\", ex: \"#ce7529\", assist: \"#1980da\"},\n        {main: \"#ff4c26\", light: \"#ffcabc\", dark: \"#e83f1d\", ex: \"#c12a0f\", assist: \"#0e95ac\"},\n        {main: \"#50b843\", light: \"#c3e5bd\", dark: \"#28ab17\", ex: \"#038b00\", assist: \"#790595\"},\n        {main: \"#2d99d7\", light: \"#e2f5ff\", dark: \"#2786c3\", ex: \"#2375af\", assist: \"#ca6c27\"},\n        {main: \"#b347d2\", light: \"#e4c0ef\", dark: \"#a623c9\", ex: \"#9621c3\", assist: \"#009000\"},\n        {main: \"#555555\", light: \"#e9e9e9\", dark: \"#434343\", ex: \"#262626\", assist: \"#860314\"}\n    ]\n};\n\nexport default (global, action) => {\n    switch (action.type) {\n        case actionTypes.SET_TITLE:\n        case actionTypes.SET_THEME:\n            return Object.assign(deepCopy(global), action.data);\n        default:\n            return global;\n    }\n};","import React, {useReducer} from 'react';\nimport mindmapReducer, {defaultValue_mindmap} from './reducer/mindmap/';\nimport nodeStatusReducer, {defaultValue_nodeStatus} from './reducer/nodeStatus';\nimport historyReducer, {defaultValue_history} from './reducer/history';\nimport globalReducer, {defaultValue_global} from './reducer/global';\n\nconst context = React.createContext({});\n\nconst WrappedProvider = props => {\n    const [mState, mDispatch] = useReducer(mindmapReducer, defaultValue_mindmap);\n    const [nState, nDispatch] = useReducer(nodeStatusReducer, defaultValue_nodeStatus);\n    const [hState, hDispatch] = useReducer(historyReducer, defaultValue_history);\n    const [gState, gDispatch] = useReducer(globalReducer, defaultValue_global);\n    const combined = {\n        mindmap: {\n            state: mState,\n            dispatch: mDispatch\n        },\n        nodeStatus: {\n            state: nState,\n            dispatch: nDispatch\n        },\n        history: {\n            state: hState,\n            dispatch: hDispatch\n        },\n        global: {\n            state: gState,\n            dispatch: gDispatch\n        }\n    };\n\n    return (<context.Provider value={combined}>\n        {props.children}\n    </context.Provider>)\n};\n\nexport {context};\nexport default WrappedProvider;","export const TOGGLE_CHILDREN = 'mindmap/toggleChildren';\nexport const ADD_CHILD = 'mindmap/addChild';\nexport const ADD_SIBLING = 'mindmap/addSibling';\nexport const MOVE_NODE = 'mindmap/moveNode';\nexport const CHANGE_TEXT = 'mindmap/changeText';\nexport const DELETE_NODE = 'mindmap/deleteNode';\nexport const EXPAND_ALL = 'mindmap/expandAll';\nexport const SET_MINDMAP = 'mindmap/setMindmap';","import {useContext} from 'react';\nimport {context} from '../context';\nimport * as mindmapAction from '../context/reducer/mindmap/actionCreator';\nimport * as nodeStatusAction from '../context/reducer/nodeStatus/actionCreator.js';\nimport {clearHistory} from '../context/reducer/history/actionCreator';\nimport md5 from 'md5';\n\nconst useMindmap = () => {\n    const {mindmap: {dispatch: mDispatch}, nodeStatus: {dispatch: nDispatch}, history: {dispatch: hDispatch}} = useContext(context);\n    return {\n        toggleChildren: (node_id, bool) => {\n            mDispatch(mindmapAction.toggleChildren(node_id, bool));\n        },\n        addChild: node_id => {\n            const new_node_id = md5('' + Date.now() + Math.random());\n            mDispatch(mindmapAction.toggleChildren(node_id, true));\n            mDispatch(mindmapAction.addChild(node_id, new_node_id));\n            nDispatch(nodeStatusAction.setEdit(new_node_id));\n        },\n        addSibling: (node_id, parent_id) => {\n            const new_node_id = md5('' + Date.now() + Math.random());\n            mDispatch(mindmapAction.addSibling(node_id, parent_id, new_node_id));\n            nDispatch(nodeStatusAction.setEdit(new_node_id));\n        },\n        moveNode: (node_id, target_id, parent_id, is_sibling) => {\n            mDispatch(mindmapAction.moveNode(node_id, target_id, parent_id, is_sibling));\n            nDispatch(nodeStatusAction.setSelect(node_id));\n        },\n        editNode: node_id => {\n            nDispatch(nodeStatusAction.setEdit(node_id));\n        },\n        changeText: (node_id, text) => {\n            mDispatch(mindmapAction.changeText(node_id, text));\n        },\n        selectNode: (node_id, select_by_click) => {\n            nDispatch(nodeStatusAction.setSelect(node_id, select_by_click));\n        },\n        deleteNode: (node_id, parent_id) => {\n            mDispatch(mindmapAction.deleteNode(node_id, parent_id));\n            nDispatch(nodeStatusAction.setSelect(parent_id));\n        },\n        clearNodeStatus: () => {\n            nDispatch(nodeStatusAction.clearAll());\n        },\n        setMindmap: (mindmap, is_new_map) => {\n            if (is_new_map) {\n                hDispatch(clearHistory());\n                nDispatch(nodeStatusAction.setSelect(mindmap.id));\n            }\n            mDispatch(mindmapAction.setMindmap(mindmap));\n        },\n        expandAll: node_id => {\n            mDispatch(mindmapAction.expandAll(node_id));\n            nDispatch(nodeStatusAction.setSelect(node_id));\n        }\n    }\n};\n\nexport default useMindmap;","import React from 'react';\nimport {css} from 'emotion';\nimport * as refer from '../../../statics/refer';\n\nexport const ButtonSet = props => (<div {...props} className={css`\ndisplay: flex;\njustify-content: flex-end;\nmargin-top: 20px;\n\nbutton {\nmargin-left: 20px;\npadding: 10px 20px;\nbackground-color: #ffffff;\nborder-radius: 10px;\noutline: none;\n}\n\nbutton:active {\ntransform: scale(0.95);\n}\n`} />);\n\nexport const MainButton = props => (<button {...props} className={css` /* button& 用于提高 CSS 权重 */\nbutton& {\ncolor: #ffffff;\nbackground-color: var(${refer.THEME_DARK});\nborder: 1px solid var(${refer.THEME_MAIN});\n}\n`} />);\n\nexport const Highlight = props => (<p {...props} className={css`\nmargin-top: 0;\ncolor: var(${refer.THEME_ASSIST});\nfont-weight: 700;\n`} />);\n\nexport const Annotation = props => (<p {...props} className={css`\ncolor: #888888;\nfont-size: 90%;\n`} />);\n\nexport const Shortcut = props => (<a {...props} className={css`\ntext-decoration: underline;\ncursor: pointer;\n`} />);","import * as actionTypes from './actionTypes';\n\nexport const setSelect = (node_id, select_by_click) => ({\n    type: actionTypes.SET_SELECT,\n    data: {\n        cur_select: node_id,\n        select_by_click: select_by_click || false,\n        cur_edit: '',\n        cur_node_info: {}\n    }\n});\n\nexport const setEdit = node_id => ({\n    type: actionTypes.SET_EDIT,\n    data: {\n        cur_select: '',\n        cur_edit: node_id,\n        cur_node_info: {}\n    }\n});\n\nexport const clearAll = () => ({\n    type: actionTypes.CLEAR_ALL,\n    data: {\n        cur_select: '',\n        select_by_click: false,\n        cur_edit: '',\n        cur_node_info: {}\n    }\n});\n\nexport const getNodeInfo = (node, parent, on_left) => ({\n    type: actionTypes.GET_NODE_INFO,\n    data: {\n        cur_node_info: {\n            ...node,\n            parent,\n            on_left\n        }\n    }\n});\n","import * as actionTypes from './actionTypes';\nimport {NEW_NODE_TEXT} from '../../../statics/refer';\n\nexport const toggleChildren = (node_id, bool) => ({\n    type: actionTypes.TOGGLE_CHILDREN,\n    data: {\n        node_id,\n        node: {\n            showChildren: bool\n        }\n    }\n});\n\nexport const addChild = (node_id, new_node_id) => ({\n    type: actionTypes.ADD_CHILD,\n    data: {\n        node_id,\n        node: {\n            id: new_node_id,\n            text: NEW_NODE_TEXT,\n            showChildren: true,\n            children: []\n        }\n    }\n});\n\nexport const addSibling = (node_id, parent_id, new_node_id) => ({\n    type: actionTypes.ADD_SIBLING,\n    data: {\n        node_id,\n        parent_id,\n        node: {\n            id: new_node_id,\n            text: NEW_NODE_TEXT,\n            showChildren: true,\n            children: []\n        }\n    }\n});\n\nexport const moveNode = (node_id, target_id, parent_id, is_sibling) => ({\n    type: actionTypes.MOVE_NODE,\n    data: {\n        node_id,\n        target_id,\n        parent_id,\n        is_sibling\n    }\n});\n\nexport const changeText = (node_id, text) => ({\n    type: actionTypes.CHANGE_TEXT,\n    data: {\n        node_id,\n        node: {\n            text\n        }\n    }\n});\n\nexport const deleteNode = (node_id, parent_id) => ({\n    type: actionTypes.DELETE_NODE,\n    data: {\n        node_id,\n        parent_id\n    }\n});\n\nexport const expandAll = node_id => ({\n    type: actionTypes.EXPAND_ALL,\n    data: {\n        node_id\n    }\n});\n\nexport const setMindmap = mindmap => ({\n    type: actionTypes.SET_MINDMAP,\n    data: {\n        mindmap\n    }\n});\n","export const SET_SELECT = 'nodeStatus/setSelect';\nexport const SET_EDIT = 'nodeStatus/setEdit';\nexport const GET_NODE_INFO = 'nodeStatus/getNodeInfo';\nexport const CLEAR_ALL = 'nodeStatus/clearAll';","export const SET_HISTORY = 'history/setHistory';\nexport const CLEAR_HISTORY = 'history/clearHistory';","export const SET_TITLE = 'global/setTitle';\nexport const SET_THEME = 'global/setTheme';\nexport const ADD_THEME = 'global/addTheme'; /// 主题增删改，将来实现","import {ROOT_NODE_ID} from './refer';\n\nexport default {\n    id: ROOT_NODE_ID,\n    text: \"主题\",\n    showChildren: true,\n    children: [\n        {\n            id: \"Sub1\",\n            text: \"分支1\",\n            showChildren: true,\n            children: []\n        },\n        {\n            id: \"Sub2\",\n            text: \"分支2\",\n            showChildren: true,\n            children: []\n        },\n        {\n            id: \"Sub3\",\n            text: \"分支3\",\n            showChildren: true,\n            children: []\n        }\n    ]\n}","import * as actionTypes from './actionTypes';\n\nexport const setHistory = (mindmap, cur_node) => ({\n    type: actionTypes.SET_HISTORY,\n    data: mindmap ? ({mindmap, cur_node}) : null\n});\n\nexport const clearHistory = () => ({type: actionTypes.CLEAR_HISTORY});","import * as actionTypes from './actionTypes';\n\nexport const setTitle = title => ({\n    type: actionTypes.SET_TITLE,\n    data: {\n        title\n    }\n});\n\nexport const setTheme = theme_index => ({\n    type: actionTypes.SET_THEME,\n    data: {\n        theme_index\n    }\n});","import {useContext, useMemo} from 'react';\nimport {context} from '../context';\nimport * as globalAction from '../context/reducer/global/actionCreator';\n\nexport default () => {\n    const {global: {state: {theme_index, theme_list}, dispatch}} = useContext(context);\n    const theme = useMemo(() => theme_list[theme_index], [theme_index]);\n    const setTheme = index => {\n        dispatch(globalAction.setTheme(index));\n    };\n\n    return {\n        theme,\n        theme_index,\n        theme_list,\n        setTheme\n    }\n}","import React from 'react';\nimport {css} from 'emotion';\nimport useTheme from '../../customHooks/useTheme';\nimport * as refer from '../../statics/refer';\n\nconst ThemeProvider = ({children}) => {\n    const {theme} = useTheme();\n\n    return (<div className={css`\n    ${refer.THEME_MAIN}: ${theme.main};\n    ${refer.THEME_LIGHT}: ${theme.light};\n    ${refer.THEME_ASSIST}: ${theme.assist};\n    ${refer.THEME_DARK}: ${theme.dark};\n    ${refer.THEME_EX}: ${theme.ex};\n    `}>\n        {children}\n    </div>);\n};\n\nexport default ThemeProvider;","import {useContext} from 'react';\nimport {context} from '../context';\nimport {setMindmap} from '../context/reducer/mindmap/actionCreator.js';\nimport {setSelect} from '../context/reducer/nodeStatus/actionCreator.js';\n\nexport default () => {\n    const {mindmap: {dispatch: mDispatch}, nodeStatus: {dispatch: nDispatch}, history: {state: history}} = useContext(context);\n\n    const applySnapshot = snapshot => {\n        if (snapshot) {\n            const {mindmap, cur_node} = snapshot;\n            mDispatch(setMindmap(JSON.parse(mindmap)));\n            nDispatch(setSelect(cur_node));\n        }\n    };\n\n    return {\n        undoHistory: () => {\n            applySnapshot(history.undo[history.undo.length - 1]);\n        },\n        redoHistory: () => {\n            applySnapshot(history.redo[0]);\n        }\n    }\n}\n\n","export const NONE = 'none';\nexport const NEW = 'new';\nexport const OPEN = 'open';\nexport const EXPORT = 'export';\nexport const THEME = 'theme';","import React from 'react';\nimport {css, cx} from 'emotion';\nimport '../../statics/zwicon.css';\nimport * as refer from '../../statics/refer';\nimport {handlePropagation} from '../../methods/assistFunctions'; // 用于禁用按钮点击。如果使用 button 的 disable 属性实现，会由于点击事件冒泡导致 Toolbar 被隐藏\n\nconst ToolButton = ({icon, onClick, children, disabled}) => {\n    return (<button onClick={disabled ? handlePropagation : onClick} className={cx(wrapper, {[disabled_style]: disabled})}>\n            <i className={'zwicon-' + icon} />\n            <span>{children}</span>\n        </button>);\n};\n\nexport default ToolButton;\n\n// CSS\nconst wrapper = css`\nmargin: 0 0.12em;\npadding: 0 0.24em;\n/* margin 用于增加间隔，padding 用于增大可点击区域 */\nbackground-color: transparent;\nborder: none;\noutline: none;\ncursor: pointer;\n\ni {\ndisplay: block;\nmargin-bottom: 0.12em;\nfont-size: 100%;\n}\nspan {\ndisplay: block;\nfont-size: 25%;\n}\n\n&:active {\ntransform: scale(0.95);\n}\n\n&:hover {\ncolor: var(${refer.THEME_ASSIST});\n}\n`;\n\nconst disabled_style = css`\n&, &:hover {\ncolor: #cccccc;\n}\n\ncursor: not-allowed;\n`;","import React, {useEffect, useContext, useRef} from 'react';\nimport {css} from 'emotion';\nimport {context} from '../../context';\nimport {setTitle} from '../../context/reducer/global/actionCreator';\nimport * as refer from '../../statics/refer';\n\nconst MindmapTitle = () => {\n    const self = useRef();\n    const {global: {state: {title}, dispatch}} = useContext(context);\n\n    useEffect(() => {\n        document.title = `RMind - ${title}`;\n        localStorage.setItem('title', title);\n    }, [title]);\n\n    const handleKeydown = event => {\n        switch (event.key.toUpperCase()) {\n            case 'ESCAPE':\n                self.current.textContent = title;\n            case 'ENTER':\n                self.current.blur();\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleBlur = () => {\n        let new_title = self.current.textContent.trim();\n        if (new_title === '') {\n            new_title = title;\n        }\n        if (new_title.length > 30) {\n            new_title = new_title.slice(0, 30);\n        }\n        self.current.textContent = new_title; // contentEditable 组件内容不会被自动更新\n        dispatch(setTitle(new_title));\n    };\n\n    return (<span ref={self} className={wrapper} contentEditable=\"true\" suppressContentEditableWarning=\"true\"\n                  spellCheck=\"false\"\n                  onKeyDown={handleKeydown} onBlur={handleBlur}>{title}</span>);\n};\n\nexport default MindmapTitle;\n\n// CSS\nconst wrapper = css`\nalign-self: center;\npadding: 0 10px; /* 两侧 padding 用于增大组件点击区域，避免将光标定位至首尾处时意外 blur */\ncolor: var(${refer.THEME_DARK});\nfont-size: 20px;\nfont-weight: 700;\nborder-bottom: 2px solid transparent;\noutline: none;\ntransition: 0.2s;\n\n&:read-write {\ncursor: edit;\n}\n\n&:focus {\nborder-bottom: 2px solid var(${refer.THEME_ASSIST});\n}\n`;","import React, {useContext} from 'react';\nimport {context} from '../../../context';\nimport {setTitle} from '../../../context/reducer/global/actionCreator';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport defaultMindmap from '../../../statics/defaultMindmap';\nimport * as refer from '../../../statics/refer';\nimport {ButtonSet, MainButton, Shortcut, Highlight, Annotation} from '../common/styledComponents';\n\nconst New = ({handleClosePopup, handleDownload}) => {\n    const {global:{dispatch}} = useContext(context);\n    const {setMindmap} = useMindmap();\n\n    const handleNewFile = () => {\n        setMindmap(defaultMindmap, true);\n        dispatch(setTitle(refer.DEFAULT_TITLE));\n        handleClosePopup();\n    };\n\n    return (<div>\n        <Highlight>新建导图后，当前思维导图的数据将丢失。</Highlight>\n        <Annotation>要保存当前数据，请将思维导图<Shortcut onClick={handleDownload}>下载至本地</Shortcut>。</Annotation>\n        <ButtonSet>\n            <MainButton onClick={handleNewFile}>新建导图</MainButton>\n            <button onClick={handleClosePopup}>取消</button>\n        </ButtonSet>\n    </div>);\n};\n\nexport default New;","import md5 from 'md5';\nimport * as refer from '../statics/refer';\n\nconst getLayerAndText = (line, format) => {\n    let layer, text;\n    switch (format) {\n        case 'MD': {\n            if (line.match(/^#{1,6} /)) {\n                layer = line.match(/^#{1,6} /)[0].length - 2;\n                text = line.replace(/^#{1,6} /, '');\n            } else if (line.match(/^\\s*[-*] /)) {\n                layer = line.match(/^\\s*[-*] /)[0].length + 4;\n                text = line.replace(/^\\s*[-*] /, '');\n            }\n            return {layer, text};\n        }\n        case 'TXT': {\n            layer = line.match(/^\\s*/)[0].length;\n            text = line.replace(/^\\s*/, '');\n            return {layer, text};\n        }\n        default:\n            return {layer, text};\n    }\n};\n\nconst buildNodeFromText = (data_array, format, cur_layer, cur_text = '') => {\n    if (data_array.length === 0 && cur_layer === -1) {\n        return;\n    }\n    if (cur_layer === -1) {\n        const root_data = getLayerAndText(data_array.shift(), format);\n        cur_layer = root_data.layer || 0; // 一定的鲁棒性\n        cur_text = root_data.text || '未知数据';\n    }\n    const cur_node = {\n        id: cur_layer === 0 ? refer.ROOT_NODE_ID : md5('' + Date.now() + Math.random() + cur_text),\n        text: cur_text,\n        showChildren: true,\n        children: []\n    };\n    while (data_array.length > 0) {\n        const {layer, text} = getLayerAndText(data_array[0], format);\n        if (layer <= cur_layer) {\n            break;\n        }\n        data_array.shift();\n        if (layer) { // 排除掉无法匹配的情况\n            cur_node.children.push(buildNodeFromText(data_array, format, layer, text));\n        }\n    }\n    return cur_node;\n};\n\nconst copyNodeData = (format, target_node, source_node, is_root_node) => {\n    switch (format) {\n        case 'KM':\n            target_node.id = is_root_node ? refer.ROOT_NODE_ID : source_node.data.id;\n            target_node.text = source_node.data.text;\n            target_node.showChildren = source_node.data.expandState !== 'collapse';\n            target_node.children = source_node.children.map(child => copyNodeData(format, {}, child));\n            return target_node;\n        default:\n            return;\n    }\n};\n\nconst buildNodeFromJSON = (json, format) => {\n    switch (format) {\n        case 'RMF':\n            return JSON.parse(json);\n        case 'KM': {\n            let km_mindmap = JSON.parse(json);\n            return copyNodeData(format, {}, km_mindmap.root, true);\n        }\n        default:\n            return;\n    }\n};\n\nexport default (import_data, format) => {\n    let mindmap;\n    switch (format) {\n        case 'MD':\n        case 'TXT':\n            const data_array = import_data.split('\\n').filter(line => line);\n            mindmap = buildNodeFromText(data_array, format, -1);\n            break;\n        default:\n            mindmap = buildNodeFromJSON(import_data, format);\n            break;\n    }\n    return mindmap;\n}","import React, {useContext} from 'react';\nimport {css} from 'emotion';\nimport {context} from '../../../context';\nimport {setTitle} from '../../../context/reducer/global/actionCreator';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport {ROOT_NODE_ID} from '../../../statics/refer';\nimport mindmapParser from '../../../methods/mindmapParser';\nimport {ButtonSet, MainButton, Shortcut, Highlight, Annotation} from '../common/styledComponents';\n\nconst Open = ({handleClosePopup, handleDownload}) => {\n    const {global: {dispatch}} = useContext(context);\n    const {setMindmap} = useMindmap();\n\n    const handleOpenFile = () => {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = '.rmf,.km,.txt,.md';\n        input.addEventListener('change', event => {\n            const file = event.target.files[0],\n                file_name = file.name;\n            let dot_index = file_name.length - 1;\n            while (dot_index > 0 && file_name[dot_index] !== '.') {\n                dot_index--;\n            }\n            const format = file_name.slice(dot_index + 1).toUpperCase(),\n                title = file_name.slice(0, dot_index);\n            const file_reader = new FileReader();\n            file_reader.onload = event => {\n                const str = event.target.result;\n                const mindmap = mindmapParser(str, format);\n                if (mindmap && mindmap.id === ROOT_NODE_ID) {\n                    setMindmap(mindmap, true);\n                    dispatch(setTitle(title));\n                    handleClosePopup();\n                } else {\n                    alert('不是有效的思维导图文件');\n                }\n            };\n            file_reader.readAsText(file);\n        });\n        input.click();\n    };\n\n    return (<div>\n        <Highlight>打开其他文件后，当前思维导图的数据将丢失。</Highlight>\n        <Annotation>要保存当前数据，请将思维导图<Shortcut onClick={handleDownload}>下载至本地</Shortcut>。</Annotation>\n        <p className={sub_title}>支持打开格式：</p>\n        <ul className={list_wrapper}>\n            <li>RMind（.rmf）</li>\n            <li>百度脑图（.km）</li>\n            <li>Markdown（.md）</li>\n            <li>文本文件（.txt）</li>\n        </ul>\n        <ButtonSet>\n            <MainButton onClick={handleOpenFile}>打开文件</MainButton>\n            <button onClick={handleClosePopup}>取消</button>\n        </ButtonSet>\n    </div>);\n};\n\nexport default Open;\n\n// CSS\nconst sub_title = css`\nmargin: 20px 0 5px;\npadding-bottom: 8px;\nborder-bottom: 1px solid #dddddd;\n`;\n\nconst list_wrapper = css`\nmargin: 0;\npadding: 0;\nfont-size: 90%;\nlist-style: circle inside;\n\nli {\nline-height: 2em;\n}\n`;","import React from 'react';\nimport {css, cx} from 'emotion';\n\nconst ThemeListItem = ({theme, index, is_current, setTheme}) => {\n    const handleSetTheme = () => {\n        setTheme(index);\n    };\n\n    return (<li className={cx(wrapper, {[current_style]: is_current})} onClick={handleSetTheme}>\n        <div style={{backgroundColor: theme.ex}} />\n        <div style={{backgroundColor: theme.dark}} />\n        <div style={{backgroundColor: theme.main}} />\n        <div style={{backgroundColor: theme.light}} />\n    </li>);\n};\n\nexport default ThemeListItem;\n\n// CSS\n\nconst wrapper = css`\ndisplay: flex;\nbox-sizing: border-box;\nwidth: 47%;\nheight: 25px;\nmargin: 8px 0;\nborder-radius: 18px;\ncursor: pointer;\noverflow: hidden;\n\ndiv {\nflex: 1;\nz-index: -1;\n}\n`;\n\nconst current_style = css`\nbox-shadow: 0 0 0 4px #ffffff, 0 0 0 6px #000000; /* 两层阴影实现框选效果，也可用 inset 阴影 + border-color 做 */\n`;\n","import React, {useEffect} from 'react';\nimport {css} from 'emotion';\nimport useTheme from '../../../../customHooks/useTheme';\nimport {ButtonSet, Highlight} from '../../common/styledComponents';\nimport ThemeListItem from './ThemeListItem';\n\nconst Theme = ({handleClosePopup}) => {\n    const {theme_index, theme_list, setTheme} = useTheme();\n\n    useEffect(() => {\n        localStorage.setItem('theme_index', theme_index);\n    }, [theme_index]);\n\n    return (<div>\n        <Highlight>请选择主题：</Highlight>\n        <ul className={list_wrapper}>\n            {theme_list.map((theme, index) => <ThemeListItem key={theme.main} theme={theme} index={index}\n                                                             is_current={theme_index === index} setTheme={setTheme} />)}\n        </ul>\n        <ButtonSet>\n            <button onClick={handleClosePopup}>完成</button>\n        </ButtonSet>\n    </div>);\n};\n\nexport default Theme;\n\n// CSS\nconst list_wrapper = css`\ndisplay: flex;\njustify-content: space-between;\nflex-wrap: wrap;\npadding: 0;\nlist-style: none;\n`;","import React, {Suspense, lazy} from 'react';\nimport {css} from 'emotion';\nimport * as popupType from './common/popupType';\nimport {handlePropagation} from '../../methods/assistFunctions';\nimport New from './subComponents/New';\nimport Open from './subComponents/Open';\nimport Theme from './subComponents/Theme';\n\nconst getContentComponent = type => {\n    switch (type) {\n        case popupType.NEW:\n            return New;\n        case popupType.OPEN:\n            return Open;\n        case popupType.EXPORT:\n            return lazy(() => import('./subComponents/Export'));\n        case popupType.THEME:\n            return Theme;\n        default:\n            return;\n    }\n};\n\nconst Popup = ({type, handleClosePopup, handleDownload}) => {\n    const Content = getContentComponent(type);\n    return (<div className={wrapper} onClick={handlePropagation}>\n        <div className={content_wrapper}>\n            <i className={'zwicon-close-circle ' + close_button} onClick={handleClosePopup} />\n            <Suspense fallback={<></>}>\n                <Content handleClosePopup={handleClosePopup} handleDownload={handleDownload} />\n            </Suspense>\n        </div>\n        <div className={overlay} onClick={handleClosePopup} />\n    </div>);\n};\n\nexport default Popup;\n\n// CSS\nconst wrapper = css`\nposition: fixed;\ntop:0;\nbottom:0;\nleft:0;\nright:0;\n`;\n\nconst content_wrapper = css`\ndisplay: flex;\nflex-direction: column;\nposition: absolute;\ntop:30%;\nleft:0;\nright:0;\nwidth: 400px;\nmargin: auto;\npadding: 40px 40px 20px;\nfont-size: 1rem;\nbackground-color: #ffffff;\nborder-radius: 20px;\nz-index: 1;\n`;\n\nconst close_button = css`\nposition: absolute;\ntop: 10px;\nright: 10px;\nfont-size: 25px;\nfont-weight: 700;\n\n&:active {\ntransform: scale(0.95)\n}\n`;\n\nconst overlay = css`\nposition: absolute;\ntop:0;\nbottom:0;\nleft:0;\nright:0;\nbackground: #000000;\nopacity: 0.2;\n`;\n","import React, {useState, useContext} from 'react';\nimport {css} from 'emotion';\nimport {context} from '../../context';\nimport useMindmap from '../../customHooks/useMindmap';\nimport useHistory from '../../customHooks/useHistory';\nimport * as refer from '../../statics/refer';\nimport * as popupType from '../../components/Popup/common/popupType';\nimport {handlePropagation, downloadFile} from '../../methods/assistFunctions'; // 防止 Mindmap 中的选中状态由于冒泡被清除\nimport ToolButton from '../../components/ToolButton';\nimport MindmapTitle from '../../components/MindmapTitle';\nimport Popup from '../../components/Popup';\n\nconst Nav = () => {\n    const [popup, setPopup] = useState(popupType.NONE);\n    const {mindmap: {state: mindmap}, history: {state: history}, global: {state: {title}}} = useContext(context);\n    const {expandAll} = useMindmap();\n    const {undoHistory, redoHistory} = useHistory();\n\n    const handleClosePopup = () => {\n        setPopup(popupType.NONE);\n    };\n\n    const handleNewFile = () => {\n        setPopup(popupType.NEW);\n    };\n\n    const handleDownload = () => {\n        const url = `data:text/plain,${encodeURIComponent(JSON.stringify(mindmap))}`;\n        downloadFile(url, `${title}.rmf`);\n    };\n\n    const handleOpenFile = () => {\n        setPopup(popupType.OPEN);\n    };\n\n    const handleExport = () => {\n        setPopup(popupType.EXPORT);\n    };\n\n    const handleTheme = () => {\n        setPopup(popupType.THEME);\n    };\n\n    const handleUndo = () => {\n        undoHistory();\n    };\n\n    const handleRedo = () => {\n        redoHistory();\n    };\n\n    const handleExpand = () => {\n        expandAll(refer.ROOT_NODE_ID);\n    };\n\n    return (<nav className={wrapper}>\n        <section className={section} onClick={handlePropagation}>\n            <ToolButton icon={'add-item-alt'} onClick={handleNewFile}>新建</ToolButton>\n            <ToolButton icon={'folder-open'} onClick={handleOpenFile}>打开</ToolButton>\n            <ToolButton icon={'file-download'} onClick={handleDownload}>下载至本地</ToolButton>\n            <ToolButton icon={'duplicate'} onClick={handleExport}>导出</ToolButton>\n            <ToolButton icon={'palette'} onClick={handleTheme}>主题</ToolButton>\n        </section>\n        <section className={section}>\n            <MindmapTitle />\n        </section>\n        <section className={section} onClick={handlePropagation}>\n            <ToolButton icon={'undo'} disabled={history.undo.length === 0} onClick={handleUndo}>撤销</ToolButton>\n            <ToolButton icon={'redo'} disabled={history.redo.length === 0} onClick={handleRedo}>重做</ToolButton>\n            <ToolButton icon={'scale'} onClick={handleExpand}>展开所有节点</ToolButton>\n        </section>\n        {popup !== popupType.NONE &&\n        <Popup type={popup} handleClosePopup={handleClosePopup} handleDownload={handleDownload} />}\n    </nav>);\n};\n\nexport default Nav;\n\n// CSS\nconst wrapper = css`\ndisplay: flex;\njustify-content: space-between;\nposition: fixed;\ntop:0;\nleft:0;\nright:0;\nheight: 56px;\npadding: 0 50px;\nfont-size: 25px;\nbackground-color: #ffffff;\nbox-shadow: 0 0px 2px #aaaaaa;\nz-index: 10;\n`;\n\nconst section = css`\ndisplay: flex;\n`;","import * as refer from '../statics/refer';\n\nexport default (nodeStatus, mindmapHook, historyHook) => {\n    const {addChild, addSibling, editNode, deleteNode, toggleChildren, selectNode} = mindmapHook;\n\n    const handleKeyEventWithNode = event => {\n        switch (event.key.toUpperCase()) {\n            case 'TAB':\n                addChild(nodeStatus.cur_select);\n                break;\n            case 'ENTER':\n                event.preventDefault(); // 防止 enter 的点击行为\n                addSibling(nodeStatus.cur_select, nodeStatus.cur_node_info.parent.id);\n                break;\n            case 'F2':\n                editNode(nodeStatus.cur_select);\n                break;\n            case 'BACKSPACE':\n            case 'DELETE':\n                deleteNode(nodeStatus.cur_select, nodeStatus.cur_node_info.parent.id);\n                break;\n            case ' ':\n                event.preventDefault(); // 默认行为会导致画面移动，因此 prevent，下同\n                toggleChildren(nodeStatus.cur_select, !nodeStatus.cur_node_info.showChildren); // Boolean('false') === true\n                break;\n            case 'ARROWLEFT':\n                event.preventDefault();\n                if (nodeStatus.cur_node_info.parent === refer.ROOT_PARENT) {\n                    if (nodeStatus.cur_node_info.children.length > 3) {\n                        selectNode(nodeStatus.cur_node_info.children[Math.trunc(nodeStatus.cur_node_info.children.length / 2)].id);\n                    }\n                } else {\n                    if (!nodeStatus.cur_node_info.on_left) {\n                        selectNode(nodeStatus.cur_node_info.parent.id);\n                    } else if (nodeStatus.cur_node_info.children.length > 0) {\n                        selectNode(nodeStatus.cur_node_info.children[0].id);\n                    }\n                }\n                break;\n            case 'ARROWRIGHT':\n                event.preventDefault();\n                if (nodeStatus.cur_node_info.on_left) {\n                    selectNode(nodeStatus.cur_node_info.parent.id);\n                } else if (nodeStatus.cur_node_info.children.length > 0) {\n                    selectNode(nodeStatus.cur_node_info.children[0].id);\n                }\n                break;\n            case 'ARROWUP': {\n                event.preventDefault();\n                const cur_index = nodeStatus.cur_node_info.parent.children.findIndex(child => child.id === nodeStatus.cur_node_info.id);\n                if (cur_index > 0) {\n                    selectNode(nodeStatus.cur_node_info.parent.children[cur_index - 1].id);\n                }\n                break;\n            }\n            case 'ARROWDOWN': {\n                event.preventDefault();\n                const cur_index = nodeStatus.cur_node_info.parent.children.findIndex(child => child.id === nodeStatus.cur_node_info.id),\n                    last_index = nodeStatus.cur_node_info.parent.children.length - 1;\n                if (cur_index < last_index) {\n                    selectNode(nodeStatus.cur_node_info.parent.children[cur_index + 1].id);\n                }\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    return event => {\n        if (nodeStatus.cur_edit === '') {\n            const is_on_mac = navigator.platform.toUpperCase().startsWith('MAC');\n            const combine_key_pressed = is_on_mac ? event.metaKey : event.ctrlKey;\n            if (combine_key_pressed && event.key.toUpperCase() === 'Z') {\n                if (event.shiftKey) {\n                    historyHook.redoHistory();\n                } else {\n                    historyHook.undoHistory();\n                }\n            }\n        }\n        if (nodeStatus.cur_select !== '') {\n            try {\n                handleKeyEventWithNode(event); // 据说在 try 代码块中写大量语句会影响性能，因此包装为函数\n            } catch (e) {\n                alert('当前的节点信息存在问题，请重新选择节点');\n            }\n        }\n    };\n};","import React from 'react';\nimport {css} from 'emotion';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport {handlePropagation} from '../../../methods/assistFunctions';\nimport ToolButton from '../../ToolButton';\n\nconst Toolbar = ({layer, node, parent}) => {\n    const mindmapHook = useMindmap();\n\n    const handleAddChild = () => {\n        mindmapHook.addChild(node.id);\n    };\n\n    const handleAddSibling = () => {\n        mindmapHook.addSibling(node.id, parent.id);\n    };\n\n    const handleDeleteNode = () => {\n        mindmapHook.deleteNode(node.id, parent.id);\n    };\n\n    const handleEditNode = () => {\n        mindmapHook.editNode(node.id);\n    };\n\n    const handleToggleChildren = () => {\n        mindmapHook.toggleChildren(node.id, !node.showChildren);\n    };\n\n    return (<div className={wrapper} onClick={handlePropagation}>\n        <ToolButton icon={'git-commit'} onClick={handleAddChild}>添加子节点</ToolButton>\n        <ToolButton icon={'git-fork'} onClick={handleAddSibling} disabled={layer < 1}>添加兄弟节点</ToolButton>\n        <ToolButton icon={'delete'} onClick={handleDeleteNode} disabled={layer < 1}>删除</ToolButton>\n        <ToolButton icon={'edit-pencil'} onClick={handleEditNode}>编辑</ToolButton>\n        <ToolButton icon={'split-v'} onClick={handleToggleChildren} disabled={layer < 1 || node.children.length === 0}>显隐子节点</ToolButton>\n    </div>);\n};\n\nexport default Toolbar;\n\n// CSS\nconst wrapper = css`\ndisplay: flex;\nposition: absolute;\nbottom: calc(100% + 5px);\nleft:0;\nbackground-color: #ffffff;\nwidth: max-content;\nheight: 50px;\npadding: 0 8px;\nfont-size: 20px;\nbackground-color: #ffffff;\nborder-radius: 10px;\nbox-shadow: 5px 5px 10px #aaaaaa;\n`;","import React, {useEffect, useRef} from 'react';\nimport {css} from 'emotion';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport {handlePropagation} from '../../../methods/assistFunctions';\n\nconst InputDiv = ({node_id, children}) => {\n    const self = useRef();\n    const {changeText, selectNode} = useMindmap();\n\n    const handleKeydown = event => {\n        switch (event.key.toUpperCase()) {\n            case 'ESCAPE':\n                self.current.textContent = children;\n            case 'ENTER':\n                self.current.blur();\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleBlur = () => {\n        changeText(node_id, self.current.textContent);\n        selectNode(node_id);\n    };\n\n    useEffect(() => {\n        self.current.focus();\n        const selection = document.getSelection();\n        selection.selectAllChildren(self.current);\n    }, []);\n\n    return (<div className={wrapper} ref={self} contentEditable=\"true\" suppressContentEditableWarning=\"true\"\n                 onClick={handlePropagation} onKeyDown={handleKeydown} onBlur={handleBlur}>{children}</div>);\n};\n\nexport default InputDiv;\n\n// CSS\nconst wrapper = css`\nposition: absolute;\ntop: 0;\nbottom: 0;\nleft: 0;\nright: 0;\nwidth: fit-content;\nmin-width: 1em;\nmax-width: 10em;\nheight: fit-content;\nmargin: auto;\npadding: 10px;\ncolor: #333333;\nbackground-color: #ffffff;\nbox-shadow: 0 0 20px #aaaaaa;\nborder-radius: 5px;\noutline: none;\nz-index: 3;\nuser-select: text;\n`;","import React, {useEffect, useRef, useContext} from 'react';\nimport {css, cx} from 'emotion';\nimport {context} from '../../context';\nimport useMindmap from \"../../customHooks/useMindmap\";\nimport {getNodeInfo} from '../../context/reducer/nodeStatus/actionCreator';\nimport * as refer from '../../statics/refer';\nimport {handlePropagation} from '../../methods/assistFunctions';\nimport Toolbar from './subComponents/Toolbar';\nimport InputDiv from './subComponents/InputDiv';\n\nconst Node = ({layer, node, parent, node_refs, on_left}) => {\n    const self = useRef();\n    const {state: nodeStatus, dispatch: nDispatch} = useContext(context).nodeStatus;\n    const mindmapHook = useMindmap();\n\n    const handleSelectNode = () => {\n        mindmapHook.selectNode(node.id, true);\n    };\n\n    const handleEditNode = () => {\n        mindmapHook.editNode(node.id);\n    };\n\n    const handleToggleChildren = () => {\n        mindmapHook.toggleChildren(node.id, !node.showChildren);\n        mindmapHook.clearNodeStatus(); // 避免出现当前选择的节点被隐藏后仍然可以操作的情况\n    };\n\n    useEffect(() => {\n        node_refs.add(self);\n        return () => {\n            node_refs.delete(self);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (nodeStatus.cur_select === node.id) {\n            self.current.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'center'});\n            nDispatch(getNodeInfo(node, parent, on_left));\n        }\n    }, [nodeStatus.cur_select, node]);\n\n    // 为避免事件冒泡导致干扰，点击事件放在了 dropArea div，最外层 Node div 用于阻止冒泡\n    return (<div\n        className={cx(common_style, specific_style[layer < 3 ? layer : 3], {[seleted_style]: nodeStatus.cur_select === node.id})}\n        draggable={layer > 0 && nodeStatus.cur_edit !== node.id}\n        data-tag={on_left ? refer.LEFT_NODE : refer.RIGHT_NODE}\n        data-parent={parent.id}\n        data-show-children={node.showChildren}\n        id={node.id}\n        ref={self}\n        onClick={handlePropagation}>\n        {nodeStatus.cur_edit === node.id &&\n        <InputDiv node_id={node.id}>{node.text}</InputDiv>}\n        <div className={drop_area} data-tag={refer.DROP_AREA} onClick={handleSelectNode} onDoubleClick={handleEditNode} />\n        <p>{node.text}</p>\n        {(layer > 0 && node.children.length > 0) &&\n        <button className={cx(toggle_button, (on_left ? button_left : button_right))} onClick={handleToggleChildren}>{node.showChildren ? '-' : '+'}</button>}\n        {(nodeStatus.cur_select === node.id && nodeStatus.select_by_click) &&\n        <Toolbar layer={layer} node={node} parent={parent} />}\n    </div>);\n};\n\nexport default Node;\n\n// CSS\nconst style_selected_border = `\nbox-shadow: 0 0 0 3px #ffffff, 0 0 0 6px var(${refer.THEME_EX}); /* 双层阴影实现选中框 */\n`;\n\nconst common_style = css`\nposition: relative;\nmin-width: 10px;\nmax-width: 200px;\nmargin: 20px 40px;\npadding: 15px;\nbackground-color: #ffffff;\nborder: 1px solid var(${refer.THEME_MAIN});\nborder-radius: 15px;\ncursor: pointer;\n\np {\nmin-height: 18px; /* 当 p 中没有内容时撑起元素 */\nmargin: 0;\nline-height: 1.5em;\noverflow-wrap: break-word;\n}\n\n&:hover {\n${style_selected_border}\n}\n\n&.ondrag {\nbackground-color: var(${refer.THEME_EX});\np {\ncolor: #ffffff;\n}\n}\n`;\n\nconst specific_style = [ // div&用于提高 CSS 权重\n    css`\ndiv& {\npadding: 15px 20px;\ncolor: #ffffff;\nfont-size: 120%;\nfont-weight: 700;\nbackground-color: var(${refer.THEME_DARK});\nborder:2px solid var(${refer.THEME_EX});\n}\n    `,\n    css`\ndiv& {\nbackground-color: var(${refer.THEME_LIGHT});\n}\n    `,\n    css`\ndiv& {\npadding: 10px 15px;\n}\n    `,\n    css`\ndiv& {\npadding: 0 15px;\nborder: none;\np {\nfont-size: 90%;\n}\n}\n    `\n];\n\nconst seleted_style = css`\nz-index: 1; /* 提高 Node 高度，防止被遮挡 */\n${style_selected_border}\n`;\n\n// 兼有防止文字被选中的功能\nconst drop_area = css`\nposition: absolute;\ntop:0;\nbottom:0;\nleft:0;\nright:0;\n`;\n\nconst toggle_button = css`\nposition: absolute;\ntop:0;\nbottom: 0;\nwidth: 20px;\nheight: 20px;\nmargin: auto 0;\npadding: 0;\ntext-align: center;\nbackground-color: #ffffff;\nborder: 1px solid #cccccc;\nborder-radius: 50%;\noutline: none;\n`;\n\nconst button_left = css`\nleft: -15px;\n`;\n\nconst button_right = css`\nright: -15px;\n`;","import React from 'react';\nimport {css, cx} from 'emotion';\nimport Node from '../Node';\n\nconst SubNode = ({layer, node, node_refs, parent, on_left}) => {\n    return (<div className={cx(wrapper, {[left_style]: on_left})}>\n        <Node layer={layer} node={node} node_refs={node_refs} parent={parent} on_left={on_left} />\n        <div>\n            {node.showChildren && node.children.map(sub_node => <SubNode key={sub_node.id} layer={layer + 1}\n                                                                         node={sub_node} node_refs={node_refs}\n                                                                         parent={node} on_left={on_left} />)}\n        </div>\n    </div>);\n};\n\nexport default SubNode;\n\n// CSS\nconst wrapper = css`\ndisplay: flex;\nalign-items: center;\n`;\n\nconst left_style = css`\nflex-direction: row-reverse;\n`;","import React, {useEffect, useRef} from 'react';\nimport {css} from 'emotion';\nimport {ROOT_PARENT} from '../../statics/refer';\nimport Node from '../Node';\nimport SubNode from '../SubNode';\n\nconst RootNode = ({layer, node, node_refs}) => {\n    const root_node = useRef();\n\n    const total = node.children.length,\n        half = total > 3 ? Math.trunc(total / 2) : total;\n\n    // 载入时使根节点居中。暂时没发现除了多包一层 div 之外更好的解决方法\n    useEffect(() => {\n        root_node.current.scrollIntoView({block: 'center', inline: 'center'});\n    }, []);\n\n    return (<div className={wrapper}>\n        <div>\n            {node.showChildren && node.children.slice(half).map(sub_node => <SubNode\n                key={sub_node.id}\n                layer={layer + 1}\n                node={sub_node}\n                node_refs={node_refs}\n                parent={node} on_left={true} />)}\n        </div>\n        <div ref={root_node}>\n            <Node layer={0} node={node} node_refs={node_refs} parent={ROOT_PARENT} />\n        </div>\n        <div>\n            {node.showChildren && node.children.slice(0, half).map(sub_node => <SubNode\n                key={sub_node.id}\n                layer={layer + 1}\n                node={sub_node}\n                node_refs={node_refs}\n                parent={node}\n                on_left={false} />)}\n        </div>\n    </div>);\n};\n\nexport default RootNode;\n\n// CSS\nconst wrapper = css`\ndisplay: flex;\nalign-items: center;\nwidth: max-content; /* max-content 才能保证正确读取布局 */\n`;","import * as refer from '../statics/refer';\n\nconst drawBezier = (ctx, from_x, from_y, to_x, to_y) => {\n    ctx.moveTo(from_x, from_y);\n    ctx.bezierCurveTo(from_x, to_y, 0.9 * to_x + 0.1 * from_x, to_y, to_x, to_y);\n};\n\nconst drawLine = (ctx, node, map) => {\n    const {id: parent_id, children} = node;\n    if (children.length > 0) {\n        const [parent_x_left, parent_x_right, parent_y] = map.get(parent_id);\n        children.forEach(child => {\n            const child_data = map.get(child.id);\n            if (child_data) {\n                const [child_x_left, child_x_right, child_y, child_tag] = child_data;\n                if (child_tag === refer.LEFT_NODE) {\n                    drawBezier(ctx, parent_x_left, parent_y, child_x_right, child_y);\n                } else {\n                    drawBezier(ctx, parent_x_right, parent_y, child_x_left, child_y);\n                }\n                drawLine(ctx, child, map);\n            }\n        })\n    }\n};\n\nexport const drawLineCanvas = (ctx, theme, mindmap, map) => {\n    ctx.beginPath();\n    ctx.lineWidth = '2';\n    ctx.strokeStyle = theme.main;\n    drawLine(ctx, mindmap, map);\n    ctx.stroke();\n    ctx.closePath();\n};\n\nexport const drawDragCanvas = (ctx, theme, child_id, parent_offset, child_offset, child_left_of_parent) => {\n    const virtual_rect_width = 50,\n        virtual_rect_height = 20;\n    ctx.beginPath();\n    ctx.strokeStyle = theme.main;\n    ctx.lineWidth = '2';\n    ctx.setLineDash([5, 5]);\n    let parent_x,\n        parent_y = (parent_offset.top + parent_offset.bottom) / 2,\n        child_x,\n        child_y = (child_offset.top + child_offset.bottom) / 2;\n    if (child_left_of_parent) {\n        parent_x = parent_offset.left;\n        child_x = child_offset.right;\n        ctx.strokeRect(child_x - virtual_rect_width, child_y - virtual_rect_height / 2, virtual_rect_width, virtual_rect_height);\n    } else {\n        parent_x = parent_offset.right;\n        child_x = child_offset.left;\n        ctx.strokeRect(child_x, child_y - virtual_rect_height / 2, virtual_rect_width, virtual_rect_height);\n    }\n    drawBezier(ctx, parent_x, parent_y, child_x, child_y);\n    ctx.stroke();\n    ctx.closePath();\n};","import * as refer from '../statics/refer';\nimport {findNode} from './assistFunctions';\nimport {drawDragCanvas} from './drawCanvas';\n\nconst getDomOffset = dom => {\n    const left = dom.offsetLeft,\n        right = left + dom.offsetWidth,\n        top = dom.offsetTop,\n        bottom = top + dom.offsetHeight;\n    return {left, right, top, bottom};\n};\n\nexport default (mindmap, drag_canvas, container, theme, mindmapHook) => {\n    const {moveNode} = mindmapHook;\n\n    let node_id, parent_id, target_id, is_sibling,\n        children, children_offset_left, children_offset_right, children_offset_vertical,\n        parent_offset, parent_is_root,\n        container_left, container_top,\n        in_drop_area;\n\n    const resetVariables = () => {\n        node_id = '';\n        parent_id = '';\n        target_id = '';\n        is_sibling = false;\n\n        children = [];\n        children_offset_left = [];\n        children_offset_right = [];\n        children_offset_vertical = [];\n\n        parent_offset = undefined;\n        parent_is_root = false;\n\n        container_left = container.scrollLeft;\n        container_top = container.scrollTop - 56;\n\n        in_drop_area = false;\n    };\n\n    const handleContainerScroll = () => {\n        container_left = container.scrollLeft;\n        container_top = container.scrollTop - 56; // 56 是 container（Main 组件）顶部 margin 值\n    };\n\n    return [\n        {\n            type: 'dragstart',\n            listener: event => {\n                resetVariables();\n                container.addEventListener('scroll', handleContainerScroll);\n                if (event.target && (event.target.dataset.tag === refer.LEFT_NODE || event.target.dataset.tag === refer.RIGHT_NODE)) {\n                    node_id = event.target.id;\n                    parent_id = event.target.dataset.parent;\n                    const parent = findNode(mindmap, parent_id);\n                    parent_is_root = parent === mindmap;\n                    parent_offset = getDomOffset(document.getElementById(parent_id));\n                    children[0] = parent.children.map(child => child.id);\n                    let children_offset = [];\n                    children_offset[0] = children[0].map(node_id => getDomOffset(document.getElementById(node_id)));\n                    if (parent_is_root && mindmap.children.length > 3) {\n                        const half = Math.trunc(mindmap.children.length / 2);\n                        children = [children[0].slice(0, half), children[0].slice(half)];\n                        children_offset = [children_offset[0].slice(0, half), children_offset[0].slice(half)];\n                    }\n                    children_offset_left = children_offset.map(each => Math.min(...each.map(offset => offset.left)));\n                    children_offset_right = children_offset.map(each => Math.max(...each.map(offset => offset.right)));\n                    children_offset_vertical = children_offset.map(each => each.map(offset => [offset.top, offset.bottom]).reduce((flat_arr, cur) => flat_arr.concat(cur), []));\n                }\n            }\n        },\n        {\n            type: 'drag',\n            listener: event => {\n                const ctx = drag_canvas.getContext('2d');\n                ctx.clearRect(0, 0, drag_canvas.width, drag_canvas.height);\n                const total = children.length;\n                const mouse_x = event.x + container_left,\n                    mouse_y = event.y + container_top;\n                for (let i = 0; i < total; i++) {\n                    if (!in_drop_area && mouse_x > children_offset_left[i] && mouse_x < children_offset_right[i]) {\n                        let child_offset = {left: children_offset_left[i], right: children_offset_right[i]};\n                        const child_left_of_parent = i === 1 || (!parent_is_root && (document.getElementById(node_id).dataset.tag === refer.LEFT_NODE)); // i = 1，即出现双侧拖拽时，左侧发生的拖拽 child_left_of_parent 必然为 true\n                        const last_index = children_offset_vertical[i].length - 1;\n                        if (mouse_y > children_offset_vertical[i][0] - 100 && mouse_y < children_offset_vertical[i][0]) { // 优化体验，实际是显示的 2 倍\n                            child_offset.top = children_offset_vertical[i][0] - 50;\n                            child_offset.bottom = children_offset_vertical[i][0];\n                            drawDragCanvas(ctx, theme, node_id, parent_offset, child_offset, child_left_of_parent);\n                            target_id = children[i][0];\n                            is_sibling = true;\n                            return;\n                        }\n                        for (let j = 2; j < last_index + 1; j += 2) {\n                            if (mouse_y > children_offset_vertical[i][j - 1] && mouse_y < children_offset_vertical[i][j]) {\n                                child_offset.top = children_offset_vertical[i][j - 1];\n                                child_offset.bottom = children_offset_vertical[i][j];\n                                drawDragCanvas(ctx, theme, node_id, parent_offset, child_offset, child_left_of_parent);\n                                target_id = children[i][j / 2];\n                                is_sibling = true;\n                                return;\n                            }\n                        }\n                        if (mouse_y > children_offset_vertical[i][last_index] && mouse_y < children_offset_vertical[i][last_index] + 100) {\n                            child_offset.top = children_offset_vertical[i][last_index];\n                            child_offset.bottom = children_offset_vertical[i][last_index] + 50;\n                            drawDragCanvas(ctx, theme, node_id, parent_offset, child_offset, child_left_of_parent);\n                            target_id = children[i + 1] && children[i + 1][0];\n                            is_sibling = true;\n                            return;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            type: 'dragover',\n            listener: event => {\n                event.preventDefault();\n            }\n        },\n        {\n            type: 'dragenter',\n            listener: event => {\n                if (event.target && event.target.dataset.tag === refer.DROP_AREA) {\n                    event.target.parentNode.classList.add('ondrag');\n                    target_id = event.target.parentNode.id;\n                    is_sibling = false;\n                    in_drop_area = true;\n                }\n            }\n        },\n        {\n            type: 'dragleave',\n            listener: event => {\n                if (event.target && event.target.dataset.tag === refer.DROP_AREA) {\n                    event.target.parentNode.classList.remove('ondrag');\n                    target_id = '';\n                    is_sibling = false;\n                    in_drop_area = false;\n                }\n            }\n        },\n        {\n            type: 'drop',\n            listener: event => {\n                event.target.parentNode.classList.remove('ondrag');\n                if (target_id !== '' && target_id !== node_id && target_id !== parent_id) {\n                    moveNode(node_id, target_id, parent_id, is_sibling);\n                }\n            }\n        },\n        {\n            type: 'dragend',\n            listener: () => {\n                const ctx = drag_canvas.getContext('2d');\n                ctx.clearRect(0, 0, drag_canvas.width, drag_canvas.height);\n                container.removeEventListener('scroll', handleContainerScroll);\n            }\n        }\n    ];\n}","import React, {useState, useEffect, useRef} from 'react';\nimport {css} from 'emotion';\nimport useMindmap from '../../customHooks/useMindmap';\nimport useTheme from '../../customHooks/useTheme';\nimport getDragEvents from '../../methods/getDragEvents';\n\nconst DragCanvas = ({parent_ref, container_ref, mindmap}) => {\n    const self = useRef();\n    const [flag, setFlag] = useState(0);\n\n    const {theme} = useTheme();\n\n    const mindmapHook = useMindmap();\n\n    const handleWindowResize = () => {\n        setFlag(Date.now());\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowResize);\n        return () => {\n            window.removeEventListener('resize', handleWindowResize);\n        }\n    }, []);\n\n    useEffect(() => {\n        const handleDrag = getDragEvents(mindmap, self.current, container_ref.current, theme, mindmapHook);\n        handleDrag.forEach(event => window.addEventListener(event.type, event.listener));\n        return () => {\n            handleDrag.forEach(event => window.removeEventListener(event.type, event.listener));\n        }\n    }, [mindmap, theme]);\n\n    useEffect(() => {\n        const dom = self.current;\n        dom.width = parent_ref.current.offsetWidth;\n        dom.height = parent_ref.current.offsetHeight;\n    }, [mindmap, flag]);\n\n    return (<canvas ref={self} className={wrapper} />);\n};\n\nexport default DragCanvas;\n\n// CSS\nconst wrapper = css`\nposition: absolute;\ntop:0;\nleft:0;\nz-index: -1;\n`;","import React, {useState, useEffect, useRef} from 'react';\nimport {css} from 'emotion';\nimport useTheme from '../../customHooks/useTheme';\nimport {drawLineCanvas} from '../../methods/drawCanvas';\n\nconst LineCanvas = ({parent_ref, mindmap, node_refs}) => {\n    const self = useRef();\n    const [flag, setFlag] = useState(0);\n\n    const {theme} = useTheme();\n\n    const handleWindowResize = () => {\n        setFlag(Date.now());\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowResize);\n        return () => {\n            window.removeEventListener('resize', handleWindowResize);\n        }\n    }, []);\n\n    useEffect(() => {\n        const dom = self.current;\n        dom.width = parent_ref.current.offsetWidth;\n        dom.height = parent_ref.current.offsetHeight; // 重新设置 canvas 大小，也兼具清除画板的作用\n        const map = new Map(Array.from(node_refs).map(ref => [ref.current.id, [(ref.current.offsetLeft), (ref.current.offsetLeft + ref.current.offsetWidth), (ref.current.offsetTop + 0.5 * ref.current.offsetHeight), ref.current.dataset.tag]]));\n        const ctx = dom.getContext('2d');\n        drawLineCanvas(ctx, theme, mindmap, map);\n    }, [mindmap, theme, flag]);\n\n    return (<canvas ref={self} className={wrapper} />);\n};\n\nexport default LineCanvas;\n\n// CSS\nconst wrapper = css`\nposition: absolute;\ntop:0;\nleft:0;\nz-index: -2;\n`;","import React, {useEffect, useContext, useRef, useMemo} from 'react';\nimport {css} from 'emotion';\nimport * as refer from '../../statics/refer';\nimport {context} from '../../context/';\nimport {setHistory} from '../../context/reducer/history/actionCreator';\nimport useMindmap from '../../customHooks/useMindmap';\nimport useHistory from '../../customHooks/useHistory';\nimport getKeydownEvent from '../../methods/getKeydownEvent';\nimport RootNode from '../../components/RootNode';\nimport DragCanvas from '../../components/DragCanvas';\nimport LineCanvas from '../../components/LineCanvas';\n\nconst node_refs = new Set();\n\nconst Mindmap = ({container_ref}) => {\n    const self = useRef();\n    const {mindmap: {state: root_node}, nodeStatus: {state: nodeStatus}, history: {dispatch: hDispatch}} = useContext(context);\n\n    const historyHook = useHistory();\n    const mindmapHook = useMindmap();\n    const {clearNodeStatus} = mindmapHook;\n\n    const mindmap_json = useMemo(() => JSON.stringify(root_node), [root_node]); // 如果 root_node 没有 JSON.stringify，使用按键操作时有时会连续两次触发 useEffect，目前没查出来为什么。利用 useMemo 避免重复触发\n\n    useEffect(() => {\n        const handleKeydown = getKeydownEvent(nodeStatus, mindmapHook, historyHook);\n        window.addEventListener('keydown', handleKeydown);\n        return () => {\n            window.removeEventListener('keydown', handleKeydown);\n        }\n    }, [nodeStatus]);\n\n    useEffect(() => {\n        window.addEventListener('click', clearNodeStatus);\n        return () => {\n            window.removeEventListener('click', clearNodeStatus);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('mindmap', mindmap_json);\n        hDispatch(setHistory(mindmap_json, nodeStatus.cur_select || nodeStatus.cur_edit));\n    }, [mindmap_json]);\n\n    return (\n        <div className={wrapper} ref={self} id={refer.MINDMAP_ID}>\n            <RootNode key={root_node.id} layer={0} node={root_node} node_refs={node_refs} />\n            <DragCanvas parent_ref={self} container_ref={container_ref} mindmap={root_node} />\n            <LineCanvas parent_ref={self} mindmap={root_node} node_refs={node_refs} />\n        </div>\n    );\n};\n\nexport default Mindmap;\n\n// CSS\nconst wrapper = css`\nposition: relative;\nwidth: fit-content;\npadding: 30vh 30vw;\n`;","import React, {useRef} from 'react';\nimport {css} from 'emotion';\nimport Mindmap from '../Mindmap';\n\nconst Main = () => {\n    const self = useRef();\n\n    return (<main ref={self} className={wrapper}><Mindmap container_ref={self} /></main>);\n};\n\nexport default Main;\n\n// CSS\nconst wrapper = css`\nheight: calc(100vh - 56px);\nmargin: 56px 0 0;\noverflow: scroll;\n`;","import React from 'react';\nimport Provider from './context/';\nimport ThemeProvider from './features/ThemeProvider'\nimport Nav from './features/Nav';\nimport Main from './features/Main'\n\nconst App = () => {\n    return (<Provider>\n        <ThemeProvider>\n            <Nav />\n            <Main />\n        </ThemeProvider>\n    </Provider>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}